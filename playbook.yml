---
  - name: "Ansible Playbook to setup GPD Pocket 2"
    hosts: localhost
    connection: local 
    tasks:
    - name: Check if current os is alpine
      assert:
        that:
          - ansible_distribution == "Alpine"
        msg: "This playbook is only for Alpine Linux"
    - name: Install build-base
      apk:
        name: build-base
        state: present
    - name: Install w3m
      apk:
        name: w3m
        state: present
    - name: Install screen tmux
      apk:
        name: screen tmux
        state: present
    - name: Install vim
      apk:
        name: vim
        state: present
    - name: install fonts good fit for most setup
      apk:
        name: font-terminus font-inconsolata font-dejavu font-noto font-noto-cjk font-awesome font-noto-extra font-isas-misc
        state: present
    - name: edit /etc/conf.d/consolefont, set consolefont to ter-132n.psf.gz
      lineinfile:
        path: /etc/conf.d/consolefont
        regexp: '^consolefont='
        line: 'consolefont="ter-132n.psf.gz"'
    - name: enable consolefont on boot by running rc-update add consolefont boot
      command: rc-update add consolefont boot
    - name: check if fbcon=rotate:1 is configured in the boot command
      lineinfile:
        backup: true
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=".*fbcon=rotate:1'
        state: absent
      check_mode: true
      register: grub_cmdline_check
      changed_when: false
    - name: insert fbcon=rotate:1 if missing
      lineinfile:
        backrefs: true
        path: /etc/default/grub
        regexp: "^(GRUB_CMDLINE_LINUX_DEFAULT=\".*)\"$"
        line: '\1 fbcon=rotate:1"'
      when: grub_cmdline_check.found == 0
    - name: update grub by running grub-mkconfig -o /boot/grub/grub.cfg
      command: grub-mkconfig -o /boot/grub/grub.cfg
    - name: Create /opt/bin
      file:
        path: /opt/bin
        state: directory
    - name: "export and append /opt/bin to PATH"
      lineinfile:
        path: /etc/profile
        line: 'export PATH=$PATH:/opt/bin'
        state: present
    - name: template bin/battery.sh.j2 to /opt/bin/battery.sh
      template:
        src: bin/battery.sh.j2
        dest: /opt/bin/battery.sh
        mode: 0755
    - name: run setup-xorg-base
      command: setup-xorg-base
    - name: install xfce4 desktop
      apk:
        name: xfce4 xfce4-terminal xfce4-screensaver lightdm-gtk-greeter dbus adwaita-icon-theme xfce4-screensaver gnupg font-noto-cjk musl-locales flatpak firefox xfce4-taskmanager
        state: present
    - name: "Starting dbus (desktop bus) service with rc-service"
      command: rc-service dbus start
    - name: "Enabling dbus (desktop bus) service with rc-update"
      command: rc-update add dbus
    - name: "Enabling udev with setup-devd"
      command: setup-devd udev
    - name: "Starting lightdm with rc-service"
      command: rc-service lightdm start
    - name: "Enabling lightdm with rc-update"
      command: rc-update add lightdm
    - name: "Allowing shut down and reboot by installing elogind polkit-elogind"
      apk:
        name: elogind polkit-elogind
        state: present
    - name: "Enable automatic mounting of USB drives by installing gvfs udisks2 gvfs-nfs gvfs-smb gvfs-fuse fuse-openrc gvfs-mtp gvfs-avahi"
      apk:
        name: gvfs udisks2 gvfs-nfs gvfs-smb gvfs-fuse fuse-openrc gvfs-mtp gvfs-avahi
        state: present
    - name: "Starting fuse with rc-service"
      command: rc-service fuse start
    - name: "Enabling fuse with rc-update"
      command: rc-update add fuse
    - name: run rc-update add elogind
      command: rc-update add elogind
    - name: run rc-servoce elogind start
      command: rc-service elogind start
    - name: debug target_user environment variable
      debug:
        var: target_user
    - name: "make sure xrandr are installed"
      apk:
        name: xrandr
        state: present

    - name: "make sure xinput are installed"
      apk:
        name: xinput
        state: present
    - name: "template .xinitrc.j2 to /home/{{ target_user }}/.xinitrc"
      template:
        src: .xinitrc.j2
        dest: /home/{{ target_user }}/.xinitrc
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: 0644
    # From https://www.ndhfilms.com/other/gpdpocket2
    - name: "template external_monitor_resol.sh to /opt/bin/external_monitor_resol.sh"
      template:
        src: external_monitor_resol.sh.j2
        dest: /opt/bin/external_monitor_resol.sh
        mode: 0755
    - name: "# add display-setup-script=/opt/bin/external_monitor_resol.sh to /etc/lightdm/lightdm.conf"
      lineinfile:
        path: /etc/lightdm/lightdm.conf
        regexp: '^#display-setup-script='
        line: 'display-setup-script=/opt/bin/external_monitor_resol.sh'
    - name: "Starting local with rc-service"
      command: rc-service local start
    - name: "Enabling local with rc-update"
      command: rc-update add local default
  